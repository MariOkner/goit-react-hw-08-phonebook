{"version":3,"file":"static/js/316.58bc5fbc.chunk.js","mappings":"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","sources":["redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => {\n      return name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactListHTML = styled.ul`\n  display: inline-block;\n  margin: 0 auto;\n`;\n\nexport const ContactItemHTML = styled.li`\n  line-height: 1.5;\n  height: 100%;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ContactDeleteHTML = styled.button`\n  width: 120px;\n  margin-left: 50px;\n  padding: 5px;\n  float: right;\n\n  background-color: #00008b;\n  color: #ffffff;\n  border-radius: 5px;\n  border: transparent;\n\n  &:hover {\n    background-color: #7b68ee;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport {\n  ContactListHTML,\n  ContactItemHTML,\n  ContactDeleteHTML,\n} from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ContactListHTML>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItemHTML key={id}>\n          {name}: {number}\n          <ContactDeleteHTML\n            id={id}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </ContactDeleteHTML>\n        </ContactItemHTML>\n      ))}\n    </ContactListHTML>\n  );\n};\n","import styled from '@emotion/styled';\nimport {\n  Form as FormikForm,\n  ErrorMessage as FormErrorMessage,\n  Field as FormField,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: inline-flex;\n\n  flex-direction: column;\n  gap: 16px;\n\n  padding: 20px 200px 20px 20px;\n\n  border: 1px solid #00008b;\n  border-radius: 5px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n`;\n\nexport const Field = styled(FormField)`\n  outline: none;\n\n  padding: 3px 200px 3px 10px;\n  border: 1px solid #000000;\n  border-radius: 3px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #7b68ee;\n    box-shadow: 0px 0px 3px 0.7px #7b68ee;\n  }\n`;\n\nexport const ErrorMessage = styled(FormErrorMessage)`\n  color: red;\n`;\n\nexport const Button = styled.button`\n  width: 120px;\n  padding: 5px;\n\n  background-color: #00008b;\n  color: #ffffff;\n  border-radius: 5px;\n  border: transparent;\n\n  &:hover {\n    background-color: #7b68ee;\n  }\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\n\nimport {\n  Form,\n  FormLabel,\n  Field,\n  ErrorMessage,\n  Button,\n} from './ContactForm.styled';\n\nconst initialValues = { name: '', number: '' };\n\nconst regexName = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst regexNumber =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required('Please enter valid name')\n    .matches(\n      regexName,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: yup\n    .string()\n    .required('Please enter valid number')\n    .matches(\n      regexNumber,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch(addContact(values));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      <Form>\n        <FormLabel>\n          Name\n          <Field type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormLabel>\n\n        <FormLabel>\n          <span>Number</span>\n          <Field type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormLabel>\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  initialValues: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n\n  width: 400px;\n  margin-bottom: 30px;\n`;\n\nexport const FilterInput = styled.input`\n  outline: none;\n  border: 1px solid #000000;\n  border-radius: 3px;\n  padding: 3px 200px 3px 10px;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #7b68ee;\n    box-shadow: 0px 0px 3px 0.7px #7b68ee;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { setFilter } from 'redux/filter/filter';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={event => dispatch(setFilter(event.target.value))}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  width: 50%;\n  margin: 0 auto;\n  padding: 20px;\n`;\n\nexport const TitleContacts = styled.h2`\n  font-size: 25px;\n  font-weight: 700;\n`;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport {\n  selectContacts,\n  selectLoading,\n  selectError,\n} from 'redux/contacts/selectors';\n\nimport { Container, TitleContacts } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (error) {\n      toast.warn(error);\n    }\n  }, [error]);\n\n  return (\n    <>\n      <Container>\n        {isLoading && <Loader />}\n        <ContactForm />\n\n        <TitleContacts title=\"Contacts\">Contacts</TitleContacts>\n        {contacts.length === 0 ? null : <Filter />}\n        {contacts.length === 0 ? null : <ContactList />}\n        <ToastContainer />\n      </Container>\n    </>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","name","toLowerCase","includes","ContactListHTML","styled","ContactItemHTML","ContactDeleteHTML","ContactList","useSelector","dispatch","useDispatch","map","id","number","onClick","deleteContact","Form","FormikForm","FormLabel","Field","FormField","ErrorMessage","FormErrorMessage","Button","initialValues","validationSchema","yup","required","matches","ContactForm","onSubmit","values","resetForm","addContact","type","component","FilterLabel","FilterInput","Filter","value","onChange","event","setFilter","target","Container","TitleContacts","Contacts","useEffect","fetchContacts","toast","Loader","title","length"],"sourceRoot":""}